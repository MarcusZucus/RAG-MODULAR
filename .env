# .env - configuración definitiva para producción del sistema rag

######################################
# configuración de api y seguridad
######################################
# Clave API para la conexión a la API de OpenAI.
# Debe generarse con un alto nivel de entropía y mantenerse segura.
openai_api_key=generate_a_secure_openai_api_key

# Clave secreta para firmar JWT, sesiones y otros tokens críticos.
# Genera una cadena aleatoria de al menos 256 bits.
secret_key=generate_a_256_bit_random_key_here

######################################
# configuración de base de datos
######################################
# Cadena de conexión a la base de datos PostgreSQL de producción.
# Formato: postgresql://<usuario>:<contraseña>@<host>:<puerto>/<nombre_base>
db_connection=postgresql://prod_user:prod_secure_password@prod-db:5432/rag_db

######################################
# configuración de cache
######################################
# Backend de caché a utilizar. En producción se recomienda Redis.
cache_backend=redis
# URL de conexión para Redis. Asegúrate de que el servicio Redis esté configurado en producción.
redis_url=redis://prod-redis:6379/0

######################################
# configuración de logging y monitoreo
######################################
# Nivel de logging (debug, info, warning, error, critical). En producción se recomienda info.
log_level=info

# Configuración opcional para OpenTelemetry u otra solución de observabilidad.
otel_exporter_otlp_endpoint=https://otel-collector.yourdomain.com:4317
otel_service_name=rag_service

######################################
# configuración del entorno de aplicación
######################################
# Define el entorno (production, staging, development, etc.)
app_env=production
# Debug deshabilitado en producción para evitar exposición de información sensible.
app_debug=false

######################################
# configuración del servidor (uvicorn)
######################################
# Dirección de enlace para el servidor.
uvicorn_host=0.0.0.0
# Puerto en el que se expondrá la API.
uvicorn_port=8000

######################################
# configuración de seguridad y rate limiting
######################################
# Límite de solicitudes por minuto por IP para evitar abusos (ajustar según necesidades).
rate_limit=1000

# Orígenes permitidos para CORS (separados por comas).
allowed_origins=https://yourdomain.com,https://www.yourdomain.com

######################################
# configuración de SMTP para alertas y logging (opcional)
######################################
smtp_server=smtp.yourdomain.com
smtp_port=587
smtp_user=alerts@yourdomain.com
smtp_password=yoursmtppassword

######################################
# configuración de detección de servicios externos
######################################
# Tiempo máximo (en segundos) para la verificación de disponibilidad de servicios externos.
service_detector_timeout=5

######################################
# configuración de docker y recursos del sistema
######################################
# Ruta del socket de Docker si se requiere integración o monitorización.
docker_host=unix:///var/run/docker.sock

######################################
# configuración adicional para el sistema RAG
######################################
# Identificador del adaptador de inputs a utilizar.
input=json_loader
# Identificador del modelo de embeddings a utilizar.
embedder=openai_embedder
# Tipo de índice vectorial (faiss_store, chroma_store, etc.).
vector_store=faiss_store
# Identificador del generador de respuestas a utilizar.
llm=openai_generator
# Número de documentos a recuperar en la búsqueda vectorial.
search_k=10
